# 프로세스 분석과 개선 {#sec-process-analysis-improvement}

## 공정분석

**공정분석**(Operations analysis)은 작업 효율성을 높이기 위해 생산 과정과 작업 흐름을 평가하는 과정이다.

### 공정기호

:::{.callout-tip icon=false title="기출"}
109-1-5, 121-3-4
:::

공정분석을 위해 사용되는 **공정기호**(Flowchart symbols)는 작업 흐름을 시각적으로 나타내기 위한 기호로, 각 단계 작업이나 활동을 명확하게 표현하는데 사용된다. 이러한 기호는 작업 분석, 개선 그리고 최적화 작업을 효과적으로 수행할 수 있게 도음을 준다.
<center>
![youtube.com/watch?v=RXpHGa9ToAE&t](images/flow_chart_symbols.png)
</center>


## TRIZ

:::{.callout-tip icon=false title="기출"}
100-2-2
:::

**TRIz**는 러시아어로 Teoriya(이론), Reshniya(해결), Izobretatelskikh(발명), Zadatch(문제) 앞 철자로, 영어로는 Theory of Inventive Problem Solving이다. 즉, 발명문제 해결을 위한 체계적인 방법론으로 풀이할 수 있다.

러시아 겐리히 알츠슐러가 1960년대 구 소련 해군에서 특허를 심사하는 업무를 할 당시 군 관련 기술적인 문제를 해결하면서 발명에는 어떤 공통 법칙과 패턴이 있음을 알게 되었다. 그는 누구나 창의적으로 문제를 해결할 수 있는 일반적이고 체계적인 문제 해결책을 강구하게 되었다. 그는 전 세계 특허 150만건 중 창의적인 특허 4만건을 추출 분석한 결과 다음 4가지 중요한 사실을 발견하게 되었다.

- 창조적 문제 정의: 하나 이상 모순이 존재하는 문제
- 해결안 수준: 특허 등에서 제시되 ㄴ해결안 수준을 5단계(해법, 개선, 혁신, 발명, 발견)로 구분
- 발명 규칙성: 동일한 해법이 다른 분야에서 반복적으로 재사용
- 진화 법칙: 기술 시스템은 일정한 유형에 따라 진화 또는 발전

발명 5가지 수준
: 수준|발명 정도|%|지식원천|고려할 해법수|내용
-|-|-|-|-|-
1|명백|32|개인지식|10|명백한 사실이나 잘 알려진 이론으로 쉽게 해결 가능한 문제(기존 시스템에 별다른 개선을 가져오지 못함)
2|개선|45|기업 내 지식|100|해당 분야 전문지식 compromise로 해결 가능한 문제(기존 시스템 개선 및 합리화를 가져옴)
3|혁신|18|산업 내 지식|1000|다른 분야 지식/기술을 합성하여 해결ㅇ ㅣ가능한 문제(기존 시스템에 대한 essential improvement를 가져옴)
4|발명|4|산업 외 지식|100,000|현존 시스템 목적을 달성하는 새로운 원리 발견(기존 시스템에 대한 New generation 개발을 가속화함)
5|발견|1|모든지식|1000000|새로운 시스템 출현을 가속화하는 발명

문제해결을 위한 5가지 개념
: - 모순: 문제를 해결한다는 것은 모순을 제거하는 것
- 자원: 시스템 내부/외부 모든 자원 활용
- 이상적 최종 결과: 모순을 해결하였을 때 달성
- 진화 유형: 시스템은 우연히 되는 것이 아니라 어떤 유형에 따라 진화
- 혁신 원리: 해결책에 대한 구체적인 단서를 제공하고 유형이 의미하는 것을 설명

문제해결 절차 9단계
: 1. 문제 정의
2. 자원 기능 분석
3. 이상적 해결방안
4. 진화 유형
5. 모순과 분리 원칙
6. 문제 핵심 요소
7. 물리적 모순 해결
8. 도출된 해결안 적용
9. 문제 해결 과정 분석

문제해결을 위한 4가지 분리 원리
: 1. 시간에 의한 분리
        - 하나의 속성이 어떤 때는 높고 어떤 때는 낮게 한다. 혹은 하나의 속성이 어떤 때는 존재하고 어떤때는 존재하지 않게 한다. 전투기 날개는 물리적 모순을 시간적으로 분리한 예이다. 전투기가 이착륙 할 때에는 날개를 넓게 펴지만, 비행 중에는 날개를 접는다.
2. 공간에 의한 분리
        - 하나의 속성이 한쪽에서는 높고 다른 쪽에서는 낮게 한다. 혹은 하나의 속성이 한쪽에서는 존재하고 다른 쪽에서는 존재하지 않게 한다. 노인들이 주로 사용하는 초점이 두개인 안경이 대표적인 예라 할 수 있다.
3. 부분과 전체에 의한 분리
        - 하나의 속성이 전체 시스템 수준에서는 어떤 하나의 값을 갖고, 부품 수준에서는 다른 값을 갖게 한다. 혹은 하나의 속성이 시스템 수준에서는 존재하지만 부품 수준에서는 존재하지 않게 한다. 예를 들어 자전거 체인은 마이크로 수준에서는 단단하지만 매크로 수준에서는 유연하다.
4. 조건에 의한 분리
        - 하나의 속성이 어떤 조건에서는 높고 다른 조건에서는 낮다. 혹은 하나의 속성이 어떤 조건에서는 조냊하고 다른 존건에서는 존재하지 않는다. 예를 들어 가는 체의 틈새들은 물을 통과시키지는 구멍 역할을 하지만, 곡물의 경우는 구명 역할을 하지 않는다. 낮은 속도로 물에 들어가면 물은 부드럽지만 10미터 높이에서 물에 뛰어들면 물은 매우 딱딱하게 느껴진다.

## 카노(Kano) 모델 {#sec-kano-model}

:::{.callout-tip icon=false title="기출"}
100-2-3
:::

카노 모델은 카노 노리아키(狩野紀昭)에 의해 1980년대에 연구된 제품 개발을 논하는 상품기획이론이다. 어떤 상품을 기획할 때 각각의 구성요소에 대해 소비자가 기대하는 것의 충족, 불충족이라는 객관적 관계와 소비자의 만족, 불만족이라는 주관적 관계 사이의 상호관계를 통해 5가지 품질요소로 구분하여 설명한다. 카노 노리아키는 일본 도쿄 리카대학의 교수이다.[^1]

![출처:https://ko.wikipedia.org/wiki/카노_모델](https://upload.wikimedia.org/wikipedia/commons/1/14/Kano_Model.gif)

- **매력적 품질요소**(Attractive Quality Element): 충족되는 경우 만족을 주지만 충족이 안 되더라도 크게 불만없는 품질요소를 말한다. 고객이 미처 기대하지 못했던 것 혹은 기대를 초과하는 만족을 주는 품질요소가 될 수 있다. 이는 단순한 만족에서 고객감동(Customer Delight)의 수준을 달성할 수 있게 한다. 한편 이러한 요소의 존재는 고객들은 모르거나 기대하지 않았기 때문에, 충족이 되지 않더라도 불만을 느끼지 않는다.
- **일차원적 품질요소**(One-Dimensional Quality Element): 충족이 되면 만족하고 충족되지 않으면 고객들의 불만을 일으키는 품질요소이다. 가장 일반적인 품질인식요소이다.
- **당위적 품질요소**(Must-Be Quality Element): 반드시 있어야만 만족하는 품질요소이다.
- **무차별 품질요소**(Indifferent Quality Element): 만족하는 것과 만족하지 못하는 것 사이에 품질의 차이가 느껴지지 않는 요소이다.
- **역 품질요소**(Reverse Quality Element): 충족되면 불만족을 일으키고 충족되지 못하면 만족되는 거꾸된 요소이다.

## 가치흐름지도(VSM)

## 품질기능전개(QFD)

**품질기능전개**(QFD,Quality function deployment)는 고객의 목소리(VOC)를 제품 엔지니어링 특성으로 변환하기 위해 1966년 일본에서 개발된 방법이다. 

**품질의 집**(HOQ, House of quality)은 QFD를 구현하기 위한 기본 도구이다.

@sec-kano-model을 이용한 분석을 통해 QFD 매트릭스를 만들 수 있다.

![Source: https://en.wikipedia.org/wiki/Quality_function_deployment](https://upload.wikimedia.org/wikipedia/commons/thumb/3/3e/A1_House_of_Quality.png/800px-A1_House_of_Quality.png)

## DFSS(Design For Six Sigma)

:::{.callout-tip icon=false title="기출"}
115-1-4
:::

**DFSS**(Design For Six Sigma)는 제품이나 서비스를 설계하는 초기 단계부터 Six Sigma의 원칙을 적용하여 품질을 최적화하고 결함을 최소화하는 방법론이다. DFSS는 Six Sigma의 한 방법론으로, 제품이나 프로세스를 개선하는 기존 접근법인 **DMAIC(Define, Measure, Analyze, Improve, Control)**와는 달리 **새로운 제품이나 프로세스를 설계하는 과정**(DMADV)에서 품질을 보장하는 데 중점을 둔다.

DFSS의 목표
: - **고품질 제품 설계**: 제품이나 서비스가 초기부터 높은 품질 기준을 만족하도록 설계하여, 출시 후 품질 문제를 방지한다.
- **고객 요구사항 반영**: 고객 기대와 요구를 정확하게 반영하여 설계하고, 이를 충족시키기 위해 제품을 최적화한다.
- **결함 최소화**: 설계 단계에서부터 결함을 사전에 예방하여, 최종 제품이 높은 품질 수준을 유지하도록 한다.

DFSS의 주요 이점
: - 고객 만족도 향상: 제품 설계 단계에서부터 고객 요구와 기대를 충족시키는 것을 우선시하여, 고객 만족도를 높일 수 있다.
- 결함 예방: 제품 설계 초기 단계에서부터 문제를 예방할 수 있어, 후속 공정에서 발생할 수 있는 결함을 미리 방지할 수 있다.
- 비용 절감: 초기 단계에서 품질을 보장하고 결함을 예방함으로써, 후속 생산 과정에서 발생할 수 있는 리워크(rework)와 불량률을 줄여 비용을 절감할 수 있다.
- 시장 경쟁력 강화: 높은 품질의 제품을 출시함으로써 기업은 시장에서 경쟁력을 강화할 수 있다.

DFSS의 활용 사례
: - 자동차 산업: 고품질 차량 부품 설계와 생산을 위해 DFSS를 적용하여 결함률을 최소화하고, 고객 요구사항을 반영한 제품을 제공한다.
- 소프트웨어 개발: 소프트웨어 개발 과정에서 DFSS를 활용하여 성능과 안정성을 극대화하고, 사용자 요구를 충족하는 제품을 설계한다.
- 제약 산업: 제품 설계 단계에서부터 품질과 안전을 보장하기 위해 DFSS를 활용한다. 이를 통해 제품이 시장에 출시되기 전에 규제 요건을 충족하도록 한다.

DFSS는 제품과 서비스를 설계하는 초기 단계에서부터 품질을 최적화하고 결함을 최소화하는 데 중점을 둔다. 고객 요구사항을 정확히 반영하고 이를 바탕으로 제품을 설계하는 방식으로 @sec-six-sigma 원칙을 적용하여 높은 품질을 갖는 제품을 시장에 출시할 수 있도록 돕는다. DFSS는 효율적인 설계, 고객 만족도 향상, 비용 절감, 경쟁력 강화 등 많은 이점을 제공한다.

### DFSS 핵심 요소

DFSS는 주로 다섯 가지 핵심 단계로 구성된다. 이 단계들은 제품 설계와 관련된 프로세스를 구조적으로 개선하는 데 도움을 준다.

```{mermaid}
flowchart TB
00[DFSS]
subgraph 10[DMADV]
Define
Measure
Analyze
D1[Design]
Verify
end

subgraph 20[IDOV]
Identify
D2[Design]
Optimize
Validate

end

00 --- 10 & 20
```

DMADV (Define, Measure, Analyze, Design, Verify)
: - Define (정의): 프로젝트 목표와 고객 요구 사항을 정의하고, 성공적인 제품 또는 서비스 설계를 위한 목표를 설정한다.
- Measure (측정): 고객 요구사항을 충족시키기 위한 성과 지표를 정의하고, 해당 요구를 만족시킬 수 있는 측정 가능한 특성들을 파악한다.
- Analyze (분석): 설계 옵션을 분석하고, 최적 설계를 위한 다양한 대안들을 평가한다. 기술적, 경제적, 시장적 측면을 고려한다.
- Design (설계): 실제 제품이나 서비스 설계를 진행한다. 이 단계에서는 제품 설계가 고객 요구 사항과 품질 목표를 충족하도록 세부 사항을 결정한다.
- Verify (검증): 설계가 실제로 고객 요구를 충족하는지 확인하고, 필요한 경우 추가적인 수정과 개선을 통해 제품을 검증한다.

IDOV (Identify, Design, Optimize, Validate)
: - 이 방법은 DFSS의 또 다른 접근 방식으로, IDOV는 특히 제품 설계에 필요한 각 단계를 좀 더 구체적으로 정의한다.
- Identify: 고객 요구 사항과 기대를 파악한다.
- Design: 그 요구를 충족할 수 있는 제품 설계를 한다.
- Optimize: 설계를 최적화하여 성능과 품질을 극대화한다.
- Validate: 최종 설계가 실제 환경에서 잘 작동하는지 검증한다.


## 참고자료

[^1]: [https://ko.wikipedia.org/wiki/카노_모델](https://ko.wikipedia.org/wiki/%EC%B9%B4%EB%85%B8_%EB%AA%A8%EB%8D%B8)


